//! Utilities for the `bool` primitive type.

pub type alias Bool = bool

@total
@operator.not
pub fn not(b: bool) -> bool = __prim_bool_not(b)
@total
pub fn and(lhs: bool, rhs: bool) -> bool = __prim_bool_and(lhs, rhs)
@total
pub fn or(lhs: bool, rhs: bool) -> bool = __prim_bool_or(lhs, rhs)
@total
pub fn xor(lhs: bool, rhs: bool) -> bool = __prim_bool_xor(lhs, rhs)

// PRIMITIVES

@external.scheme("not")
extern fn __prim_bool_not(b: bool) -> bool

@external.scheme("and")
extern fn __prim_bool_and(lhs: bool, rhs: bool) -> bool

@external.scheme("or")
extern fn  __prim_bool_or(lhs: bool, rhs: bool) -> bool

@external.scheme("xor")
extern fn __prim_bool_xor(lhs: bool, rhs: bool) -> bool
